#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RSContentMGR.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RSContentDB")]
	public partial class CMGRDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void Insertitem(item instance);
    partial void Updateitem(item instance);
    partial void Deleteitem(item instance);
    partial void Insertrescource(rescource instance);
    partial void Updaterescource(rescource instance);
    partial void Deleterescource(rescource instance);
    partial void InsertresType(resType instance);
    partial void UpdateresType(resType instance);
    partial void DeleteresType(resType instance);
    #endregion
		
		public CMGRDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["RSContentDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CMGRDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMGRDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMGRDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMGRDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<item> items
		{
			get
			{
				return this.GetTable<item>();
			}
		}
		
		public System.Data.Linq.Table<rescource> rescources
		{
			get
			{
				return this.GetTable<rescource>();
			}
		}
		
		public System.Data.Linq.Table<resType> resTypes
		{
			get
			{
				return this.GetTable<resType>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getCtgs")]
		public ISingleResult<getCtgsResult> getCtgs()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<getCtgsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		// these added as private memebers 
		private int _cid;
		
		private string _cname;
		
		private System.DateTime _cdate;
		
		private int _cowner;
		
		private EntitySet<item> _items;
		
		private EntitySet<rescource> _rescources;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncidChanging(int value);
    partial void OncidChanged();
    partial void OncnameChanging(string value);
    partial void OncnameChanged();
    partial void OncdateChanging(System.DateTime value);
    partial void OncdateChanged();
    partial void OncownerChanging(int value);
    partial void OncownerChanged();
    #endregion
		
		public Category()
		{
			this._items = new EntitySet<item>(new Action<item>(this.attach_items), new Action<item>(this.detach_items));
			this._rescources = new EntitySet<rescource>(new Action<rescource>(this.attach_rescources), new Action<rescource>(this.detach_rescources));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cid
		{
			get
			{
				return this._cid;
			}
			set
			{
				if ((this._cid != value))
				{
					this.OncidChanging(value);
					this.SendPropertyChanging();
					this._cid = value;
					this.SendPropertyChanged("cid");
					this.OncidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cname", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string cname
		{
			get
			{
				return this._cname;
			}
			set
			{
				if ((this._cname != value))
				{
					this.OncnameChanging(value);
					this.SendPropertyChanging();
					this._cname = value;
					this.SendPropertyChanged("cname");
					this.OncnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdate", DbType="Date NOT NULL")]
		public System.DateTime cdate
		{
			get
			{
				return this._cdate;
			}
			set
			{
				if ((this._cdate != value))
				{
					this.OncdateChanging(value);
					this.SendPropertyChanging();
					this._cdate = value;
					this.SendPropertyChanged("cdate");
					this.OncdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cowner", DbType="Int NOT NULL")]
		public int cowner
		{
			get
			{
				return this._cowner;
			}
			set
			{
				if ((this._cowner != value))
				{
					this.OncownerChanging(value);
					this.SendPropertyChanging();
					this._cowner = value;
					this.SendPropertyChanged("cowner");
					this.OncownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_item", Storage="_items", ThisKey="cid", OtherKey="category")]
		public EntitySet<item> items
		{
			get
			{
				return this._items;
			}
			set
			{
				this._items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_rescource", Storage="_rescources", ThisKey="cid", OtherKey="catgID")]
		public EntitySet<rescource> rescources
		{
			get
			{
				return this._rescources;
			}
			set
			{
				this._rescources.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = this;
		}
		
		private void detach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = null;
		}
		
		private void attach_rescources(rescource entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_rescources(rescource entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item")]
	public partial class item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _data;
		
		private System.DateTime _idate;
		
		private int _iowner;
		
		private int _category;
		
		private EntitySet<rescource> _rescources;
		
		private EntityRef<Category> _Category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndataChanging(string value);
    partial void OndataChanged();
    partial void OnidateChanging(System.DateTime value);
    partial void OnidateChanged();
    partial void OniownerChanging(int value);
    partial void OniownerChanged();
    partial void OncategoryChanging(int value);
    partial void OncategoryChanged();
    #endregion
		
		public item()
		{
			this._rescources = new EntitySet<rescource>(new Action<rescource>(this.attach_rescources), new Action<rescource>(this.detach_rescources));
			this._Category1 = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idate", DbType="Date NOT NULL")]
		public System.DateTime idate
		{
			get
			{
				return this._idate;
			}
			set
			{
				if ((this._idate != value))
				{
					this.OnidateChanging(value);
					this.SendPropertyChanging();
					this._idate = value;
					this.SendPropertyChanged("idate");
					this.OnidateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iowner", DbType="Int NOT NULL")]
		public int iowner
		{
			get
			{
				return this._iowner;
			}
			set
			{
				if ((this._iowner != value))
				{
					this.OniownerChanging(value);
					this.SendPropertyChanging();
					this._iowner = value;
					this.SendPropertyChanged("iowner");
					this.OniownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="Int NOT NULL")]
		public int category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					if (this._Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_rescource", Storage="_rescources", ThisKey="id", OtherKey="itemID")]
		public EntitySet<rescource> rescources
		{
			get
			{
				return this._rescources;
			}
			set
			{
				this._rescources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_item", Storage="_Category1", ThisKey="category", OtherKey="cid", IsForeignKey=true)]
		public Category Category1
		{
			get
			{
				return this._Category1.Entity;
			}
			set
			{
				Category previousValue = this._Category1.Entity;
				if (((previousValue != value) 
							|| (this._Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category1.Entity = null;
						previousValue.items.Remove(this);
					}
					this._Category1.Entity = value;
					if ((value != null))
					{
						value.items.Add(this);
						this._category = value.cid;
					}
					else
					{
						this._category = default(int);
					}
					this.SendPropertyChanged("Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_rescources(rescource entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_rescources(rescource entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rescource")]
	public partial class rescource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private System.Nullable<int> _itemID;
		
		private System.Nullable<int> _catgID;
		
		private System.Nullable<int> _type;
		
		private string _path;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<item> _item;
		
		private EntityRef<resType> _resType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnitemIDChanging(System.Nullable<int> value);
    partial void OnitemIDChanged();
    partial void OncatgIDChanging(System.Nullable<int> value);
    partial void OncatgIDChanged();
    partial void OntypeChanging(System.Nullable<int> value);
    partial void OntypeChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    #endregion
		
		public rescource()
		{
			this._Category = default(EntityRef<Category>);
			this._item = default(EntityRef<item>);
			this._resType = default(EntityRef<resType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemID", DbType="Int")]
		public System.Nullable<int> itemID
		{
			get
			{
				return this._itemID;
			}
			set
			{
				if ((this._itemID != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemIDChanging(value);
					this.SendPropertyChanging();
					this._itemID = value;
					this.SendPropertyChanged("itemID");
					this.OnitemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catgID", DbType="Int")]
		public System.Nullable<int> catgID
		{
			get
			{
				return this._catgID;
			}
			set
			{
				if ((this._catgID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncatgIDChanging(value);
					this.SendPropertyChanging();
					this._catgID = value;
					this.SendPropertyChanged("catgID");
					this.OncatgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int")]
		public System.Nullable<int> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					if (this._resType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="NChar(100)")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_rescource", Storage="_Category", ThisKey="catgID", OtherKey="cid", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.rescources.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.rescources.Add(this);
						this._catgID = value.cid;
					}
					else
					{
						this._catgID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_rescource", Storage="_item", ThisKey="itemID", OtherKey="id", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.rescources.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.rescources.Add(this);
						this._itemID = value.id;
					}
					else
					{
						this._itemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="resType_rescource", Storage="_resType", ThisKey="type", OtherKey="id", IsForeignKey=true)]
		public resType resType
		{
			get
			{
				return this._resType.Entity;
			}
			set
			{
				resType previousValue = this._resType.Entity;
				if (((previousValue != value) 
							|| (this._resType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._resType.Entity = null;
						previousValue.rescources.Remove(this);
					}
					this._resType.Entity = value;
					if ((value != null))
					{
						value.rescources.Add(this);
						this._type = value.id;
					}
					else
					{
						this._type = default(Nullable<int>);
					}
					this.SendPropertyChanged("resType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.resType")]
	public partial class resType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _type;
		
		private EntitySet<rescource> _rescources;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public resType()
		{
			this._rescources = new EntitySet<rescource>(new Action<rescource>(this.attach_rescources), new Action<rescource>(this.detach_rescources));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="resType_rescource", Storage="_rescources", ThisKey="id", OtherKey="type")]
		public EntitySet<rescource> rescources
		{
			get
			{
				return this._rescources;
			}
			set
			{
				this._rescources.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_rescources(rescource entity)
		{
			this.SendPropertyChanging();
			entity.resType = this;
		}
		
		private void detach_rescources(rescource entity)
		{
			this.SendPropertyChanging();
			entity.resType = null;
		}
	}
	
	public partial class getCtgsResult
	{
		
		private string _cname;
		
		private System.DateTime _cdate;
		
		private System.Nullable<System.DateTime> _idate;
		
		private int _cowner;
		
		private System.Nullable<int> _items;
		
		private System.Nullable<int> _res;
		
		public getCtgsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cname", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string cname
		{
			get
			{
				return this._cname;
			}
			set
			{
				if ((this._cname != value))
				{
					this._cname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdate", DbType="Date NOT NULL")]
		public System.DateTime cdate
		{
			get
			{
				return this._cdate;
			}
			set
			{
				if ((this._cdate != value))
				{
					this._cdate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idate", DbType="Date")]
		public System.Nullable<System.DateTime> idate
		{
			get
			{
				return this._idate;
			}
			set
			{
				if ((this._idate != value))
				{
					this._idate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cowner", DbType="Int NOT NULL")]
		public int cowner
		{
			get
			{
				return this._cowner;
			}
			set
			{
				if ((this._cowner != value))
				{
					this._cowner = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_items", DbType="Int")]
		public System.Nullable<int> items
		{
			get
			{
				return this._items;
			}
			set
			{
				if ((this._items != value))
				{
					this._items = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_res", DbType="Int")]
		public System.Nullable<int> res
		{
			get
			{
				return this._res;
			}
			set
			{
				if ((this._res != value))
				{
					this._res = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
